datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id       Int    @id @default(autoincrement())
  title    String @db.VarChar(255)
  contents String @db.Text
  tags     Tag[]

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  createdAt DateTime @default(now()) @db.Timestamptz
  updatedAt DateTime @default(now()) @db.Timestamptz
}

model Tag {
  name String @id @db.VarChar(63)

  posts Post[]
}

model Account {
  id     String @id @default(cuid())
  userId String

  providerType      String
  providerId        String
  providerAccountId String

  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id     String @id @default(cuid())
  userId String

  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  sessions Session[]

  role Role   @default(NONE)
  Post Post[]
}

enum Role {
  ADMIN
  USER
  NONE
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
